<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zzxzzxzzx123.github.io/zhang3.github.io/</id>
    <title>张卓欣的学习记录</title>
    <updated>2021-05-10T14:57:19.644Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zzxzzxzzx123.github.io/zhang3.github.io/"/>
    <link rel="self" href="https://zzxzzxzzx123.github.io/zhang3.github.io/atom.xml"/>
    <subtitle>学习使我快乐</subtitle>
    <logo>https://zzxzzxzzx123.github.io/zhang3.github.io/images/avatar.png</logo>
    <icon>https://zzxzzxzzx123.github.io/zhang3.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 张卓欣的学习记录</rights>
    <entry>
        <title type="html"><![CDATA[微信小程序无法隐藏视频控制组件？]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/wei-xin-xiao-cheng-xu-wu-fa-yin-cang-shi-pin-kong-zhi-zu-jian/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/wei-xin-xiao-cheng-xu-wu-fa-yin-cang-shi-pin-kong-zhi-zu-jian/">
        </link>
        <updated>2021-05-10T14:52:56.000Z</updated>
        <summary type="html"><![CDATA[<p>不知道大家有没有碰到这种情况，把video的视频当作轮播图使用时，默认弹出来的播放控件（播放/暂停按钮、播放进度、时间）是不是觉得很碍眼。那当我翻找小程序文档想解决这个问题时碰到了这个问题</p>
]]></summary>
        <content type="html"><![CDATA[<p>不知道大家有没有碰到这种情况，把video的视频当作轮播图使用时，默认弹出来的播放控件（播放/暂停按钮、播放进度、时间）是不是觉得很碍眼。那当我翻找小程序文档想解决这个问题时碰到了这个问题</p>
<!-- more -->
<p><img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1620658516689.png" alt="" loading="lazy"><br>
可是我在&lt;video controls:&quot;false&quot;&gt;<video>中并没有解决这个问题<br>
后来在论坛中找到了解决办法<br>
将上述代码修改为controls=&quot;{{false}}&quot;就可以啦</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微信小程序云数据库匹配数据问题]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/wei-xin-xiao-cheng-xu-yun-shu-ju-ku-pi-pei-shu-ju-wen-ti/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/wei-xin-xiao-cheng-xu-yun-shu-ju-ku-pi-pei-shu-ju-wen-ti/">
        </link>
        <updated>2021-05-10T13:59:26.000Z</updated>
        <summary type="html"><![CDATA[<p>一开始云数据库里的内容还很少，所以一开始没有想随机获得数据库里的数据，使用的方法如下<br>
wx.cloud.database().collection('zzx').where({<br>
type:&quot;单选&quot;		<br>
}).limit(5).get()<br>
数据库中字段如图：<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1620657876536.png" alt="" loading="lazy"></p>
]]></summary>
        <content type="html"><![CDATA[<p>一开始云数据库里的内容还很少，所以一开始没有想随机获得数据库里的数据，使用的方法如下<br>
wx.cloud.database().collection('zzx').where({<br>
type:&quot;单选&quot;		<br>
}).limit(5).get()<br>
数据库中字段如图：<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1620657876536.png" alt="" loading="lazy"></p>
<!-- more -->
<p>后面题库数量增加后，如果一直提供的题目都是固定的对用户体验不是很好，所以更换为下列方法<br>
wx.cloud.database().collection('zzx').aggregate().match({<br>
type: '单选'<br>
}).sample({<br>
size:10<br>
}).end()<br>
.aggregate方法是微信小程序中随机得到数据库里数据的方法，.match为匹配特殊字段方法<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1620658096193.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[未安装wx-server-sdk依赖]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/wei-an-zhuang-wx-server-sdk-yi-lai/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/wei-an-zhuang-wx-server-sdk-yi-lai/">
        </link>
        <updated>2021-04-26T14:36:33.000Z</updated>
        <content type="html"><![CDATA[<p>如图所示内容<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1619447929866.png" alt="" loading="lazy"><br>
首先，在云函数中使用 wx-server-sdk，需先调用初始化方法 init 一次，init 用于设置接下来在该云函数实例中调用云函数、数据库、文件存储时要访问的环境。</p>
<p>例如以下代码中，<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1619447957749.png" alt="" loading="lazy"><br>
在env：中填写环境id<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1619448011651.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[小程序相关]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/xiao-cheng-xu-xiang-guan/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/xiao-cheng-xu-xiang-guan/">
        </link>
        <updated>2021-04-20T13:29:15.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-数据绑定">1.  数据绑定</h2>
<ol>
<li>小程序
<ol>
<li>data中初始化数据</li>
<li>修改数据： this.setData()
<ol>
<li>修改数据的行为始终是同步的</li>
</ol>
</li>
<li>数据流：
<ol>
<li>单项： Model ---&gt; View</li>
</ol>
</li>
</ol>
</li>
<li>Vue
<ol>
<li>data中初始化数据</li>
<li>修改数据: this.key = value</li>
<li>数据流：
<ol>
<li>Vue是单项数据流： Model ---&gt; View</li>
<li>Vue中实现了双向数据绑定： v-model</li>
</ol>
</li>
</ol>
</li>
<li>React
<ol>
<li>state中初始化状态数据</li>
<li>修改数据: this.setState()
<ol>
<li>自身钩子函数中(componentDidMount)异步的</li>
<li>非自身的钩子函数中(定时器的回调)同步的</li>
</ol>
</li>
<li>数据流：
<ol>
<li>单项： Model ---&gt; View</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="2-获取用户基本信息">2. 获取用户基本信息</h2>
<ol>
<li>用户未授权(首次登陆)
<ol>
<li>button open-type=‘getUserInfo’</li>
</ol>
</li>
<li>用户已经授权(再次登陆)
<ol>
<li>wx.getUserInfo</li>
</ol>
</li>
</ol>
<h2 id="3-前后端交互">3. 前后端交互</h2>
<ol>
<li>语法: wx.request()</li>
<li>注意点:
<ol>
<li>协议必须是https协议</li>
<li>一个接口最多配置20个域名</li>
<li>并发限制上限是10个</li>
<li><strong>开发过程中设置不校验合法域名</strong>： 开发工具 ---&gt; 右上角详情 ----&gt; 本地设置 ---&gt; 不校验</li>
</ol>
</li>
</ol>
<h2 id="4-本地存储">4. 本地存储</h2>
<ol>
<li>语法: wx.setStorage() || wx.setStorageSync() || .....</li>
<li>注意点：
<ol>
<li>建议存储的数据为json数据</li>
<li>单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB</li>
<li>属于永久存储，同H5的localStorage一样</li>
</ol>
</li>
</ol>
<h1 id="扩展内容">扩展内容</h1>
<h2 id="1-事件流的三个阶段">1. 事件流的三个阶段</h2>
<ol>
<li>捕获: 从外向内</li>
<li>执行目标阶段</li>
<li>冒泡: 从内向外</li>
</ol>
<h2 id="2-事件委托">2. 事件委托</h2>
<ol>
<li>什么是事件委托
<ol>
<li>将子元素的事件委托(绑定)给父元素</li>
</ol>
</li>
<li>事件委托的好处
<ol>
<li>减少绑定的次数</li>
<li>后期新添加的元素也可以享用之前委托的事件</li>
</ol>
</li>
<li>事件委托的原理
<ol>
<li>冒泡</li>
</ol>
</li>
<li>触发事件的是谁
<ol>
<li>子元素</li>
</ol>
</li>
<li>如何找到触发事件的对象
<ol>
<li>event.target</li>
</ol>
</li>
<li>currentTarget VS target
<ol>
<li>currentTarget要求绑定事件的元素一定是触发事件的元素</li>
<li>target绑定事件的元素不一定是触发事件的元素</li>
</ol>
</li>
</ol>
<h2 id="3-定义事件相关">3. 定义事件相关</h2>
<ol>
<li>分类
<ol>
<li>标准DOM事件</li>
<li>自定义事件</li>
</ol>
</li>
<li>标准DOM事件
<ol>
<li>举例： click，input。。。</li>
<li>事件名固定的，事件由浏览器触发</li>
</ol>
</li>
<li>自定义事件
<ol>
<li>绑定事件
<ol>
<li>事件名</li>
<li>事件的回调</li>
<li>订阅方: PubSub.subscribe(事件名，事件的回调)</li>
<li>订阅方式接受数据的一方</li>
</ol>
</li>
<li>触发事件
<ol>
<li>事件名</li>
<li>提供事件参数对象， 等同于原生事件的event对象</li>
<li>发布方: PubSub.publish(事件名，提供的数据)</li>
<li>发布方是提供数据的一方</li>
</ol>
</li>
</ol>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Implicit super constructor Object() is undefined for default constructor. Must define an explicit   constructor错误]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/implicit-super-constructor-object-is-undefined-for-default-constructor-must-define-an-explicit-constructor-cuo-wu/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/implicit-super-constructor-object-is-undefined-for-default-constructor-must-define-an-explicit-constructor-cuo-wu/">
        </link>
        <updated>2021-04-19T13:07:49.000Z</updated>
        <summary type="html"><![CDATA[<p>今天在将另一台电脑上的javaee作业导入后class类出现问题-------Implicit super constructor Object() is undefined for default constructor. Must define an explicit   constructor错误</p>
]]></summary>
        <content type="html"><![CDATA[<p>今天在将另一台电脑上的javaee作业导入后class类出现问题-------Implicit super constructor Object() is undefined for default constructor. Must define an explicit   constructor错误</p>
<!-- more -->
<p>创建Class类的时候突然出现冒红，为了让自己能长个记性我决定把这个问题写下来让自己能印象深刻。</p>
<p>解决方案：把java的类库加载进去，在工程上右键选择属性-&gt;Java Build Path的Libraries-&gt;Add Library选择JRE System Library-&gt;点击Next-&gt;选择Execution environment并选择jre版本或workspace default jre(有显示的版本不是都能选的的，只有默认自带的jre和安装绑定过的选了才能起作用，这里我选择的是JavaSE-1.8)-&gt;点击Finish。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微信小程序支持的背景文件格式]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/wei-xin-xiao-cheng-xu-zhi-chi-de-bei-jing-wen-jian-ge-shi/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/wei-xin-xiao-cheng-xu-zhi-chi-de-bei-jing-wen-jian-ge-shi/">
        </link>
        <updated>2021-04-10T11:49:06.000Z</updated>
        <summary type="html"><![CDATA[<p>今天我在一个微信小程序项目中看到了背景图片是一张gif图片😨</p>
]]></summary>
        <content type="html"><![CDATA[<p>今天我在一个微信小程序项目中看到了背景图片是一张gif图片😨</p>
<!-- more -->
<p>于是我也想在自己的小程序中更改为.gif后缀的文件，在查询了官方文档后有下面解释</p>
<p>cover-image<br>
基础库 1.4.0 开始支持，低版本需做兼容处理。<br>
覆盖在原生组件之上的图片视图。可覆盖的原生组件同cover-view，支持嵌套在cover-view里。</p>
<figure data-type="image" tabindex="1"><img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1618055829123.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[OSI七层模型与TCP/IP五层模型]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/osi-qi-ceng-mo-xing-yu-tcpip-wu-ceng-mo-xing/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/osi-qi-ceng-mo-xing-yu-tcpip-wu-ceng-mo-xing/">
        </link>
        <updated>2021-04-06T07:13:39.000Z</updated>
        <content type="html"><![CDATA[<p>1.OSI模型<br>
OSI全称为开放系统互联参考模型，于1978年被国际标准化组织（ISO）提出。OSI有七层，从低到高依次为物理层、数据链路层、网络层、传输层、会话层、表示层、应用层。<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1617693646762.png" alt="" loading="lazy"><br>
&lt;1&gt;    应用层<br>
OSI参考模型中最靠近用户的一层，是为计算机用户提供应用接口，也为用户直接提供各种网络服务。我们常见应用层的网络服务协议有：HTTP，HTTPS，FTP，POP3、SMTP等。<br>
&lt;2&gt;    表示层<br>
表示数据转换<br>
格式有，JPEG、ASCll、EBCDIC、加密格式等<br>
&lt;3&gt;    会话层<br>
建立、管理、终止会话。<br>
&lt;4&gt;   传输层<br>
定义传输数据的协议端口号，以及流控和差错校验。<br>
协议有：TCP UDP，数据包一旦离开网卡即进入网络传输层<br>
&lt;5&gt;   网络层<br>
进行逻辑地址寻址，实现不同网络之间的路径选择。<br>
协议有：ICMP IGMP IP（IPV4 IPV6）<br>
&lt;6&gt;   数据链路层<br>
建立逻辑连接、进行硬件地址寻址、差错校验 [3]  等功能。（由底层网络定义协议）<br>
将比特组合成字节进而组合成帧，用MAC地址访问介质，错误发现但不能纠正。<br>
&lt;7&gt;  物理层<br>
建立逻辑连接、进行硬件地址寻址、差错校验 [3]  等功能。（由底层网络定义协议）<br>
将比特组合成字节进而组合成帧，用MAC地址访问介质，错误发现但不能纠正。</p>
<p>2.TCP/IP协议<br>
TCP/IP协议是个协议簇，它包含了多种协议。ISO/OSI模型、TCP/IP的分层模型及协议的对应如图<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1617694045715.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[The prefix "context" for element "context:component-scan" is not bound.]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/the-prefix-context-for-element-contextcomponent-scan-is-not-bound/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/the-prefix-context-for-element-contextcomponent-scan-is-not-bound/">
        </link>
        <updated>2021-03-29T13:14:42.000Z</updated>
        <content type="html"><![CDATA[<p>在配置Spring中的xml时配置<br>
&lt;context:component-scan base-package=&quot;包名&quot; /&gt;<br>
报错：The prefix &quot;context&quot; for element &quot;context:component-scan&quot; is not bound.</p>
<p>该配置文件的<beans></beans>标签的属性和当前的base.jar文件不匹配。需要在<beans>加上相应属性即可。如下图（红线上那一列即为需要加上的东西）：<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1617027281108.png" alt="" loading="lazy"></p>
<p>下面是需要添加的部分的文字版：<br>
xmlns：中加入<br>
xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</p>
<p>xsi：中加入<br>
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mysql数据库驱动：mysql-connector-java-5.1.46-bin.jar]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/mysql-shu-ju-ku-qu-dong-mysql-connector-java-5146-binjar/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/mysql-shu-ju-ku-qu-dong-mysql-connector-java-5146-binjar/">
        </link>
        <updated>2021-03-29T13:10:59.000Z</updated>
        <summary type="html"><![CDATA[<p>今天在学习Spring的事务管理时要用到mysql-connector-java-bin.jar，<br>
我在百度找到下面的链接😀</p>
]]></summary>
        <content type="html"><![CDATA[<p>今天在学习Spring的事务管理时要用到mysql-connector-java-bin.jar，<br>
我在百度找到下面的链接😀</p>
<!-- more -->
<p><a href="https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.zip">mysql-connector-java-5.1.46-bin.jar 点击链接直接下载</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[解决代理产生的Failed to connect to 127.0.0.1 port 1080 Connection refused问题]]></title>
        <id>https://zzxzzxzzx123.github.io/zhang3.github.io/post/jie-jue-dai-li-chan-sheng-de-failed-to-connect-to-127001-port-1080-connection-refused-wen-ti/</id>
        <link href="https://zzxzzxzzx123.github.io/zhang3.github.io/post/jie-jue-dai-li-chan-sheng-de-failed-to-connect-to-127001-port-1080-connection-refused-wen-ti/">
        </link>
        <updated>2021-03-25T13:30:55.000Z</updated>
        <content type="html"><![CDATA[<p>今天在git clone项目时发现git拒绝连接，我在重启了好几次电脑仍然无法解决。后面才意识到是使用了proxy代理，所以要解决问题，还是要取消代理。</p>
<p>方式一：通过git取消代理设置<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1616679448569.png" alt="" loading="lazy"></p>
<p>方式二：<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1616679475812.png" alt="" loading="lazy"></p>
<p>方式三：<br>
<img src="https://zzxzzxzzx123.github.io/zhang3.github.io//post-images/1616679507357.png" alt="" loading="lazy"></p>
<p>把上面出现的所有使用代理的协议，全部都取消掉，然后再重新进行clone就解决问题了😁</p>
]]></content>
    </entry>
</feed>